apiVersion: v1
kind: Namespace
metadata:
  name: k8s-demo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: k8s-demo
data:
  PORT: "3000"
  PGHOST: "postgres.default.svc.cluster.local"
  PGPORT: "5432"
  PGUSER: "todo"
  PGDATABASE: "todoapp"
  REDIS_URL: "redis://redis.default.svc.cluster.local:6379"
  CACHE_TTL_SECONDS: "10"
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: k8s-demo
type: Opaque
stringData:
  PGPASSWORD: "examplepassword"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: k8s-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: localhost:30500/k8s-demo-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secret
          startupProbe:
            tcpSocket:
              port: http
            failureThreshold: 60
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: k8s-demo
spec:
  type: LoadBalancer
  loadBalancerIP: 139.59.213.42
  selector:
    app: app
  ports:
    - name: http
      port: 3000
      targetPort: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-to-https
  namespace: k8s-demo
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-to-https
  namespace: k8s-demo
spec:
  redirectScheme:
    scheme: https
    permanent: true

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app
  namespace: k8s-demo
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: k8s-demo-redirect-to-https@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
    - hosts: [listspree.com]
      secretName: app-tls
  rules:
    - host: listspree.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app
                port:
                  name: http
